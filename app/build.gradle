apply plugin: 'com.android.application'
apply plugin: 'android-apt'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId "edu.galileo.android.androidchat"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "FIREBASE_SERVER_ID", project.property('FIREBASE_SERVER_ID')
            buildConfigField "String", "FCM_SEND_URL", project.property('FCM_SEND_URL')
        }
        debug {
            buildConfigField "String", "FIREBASE_SERVER_ID", project.property('FIREBASE_SERVER_ID')
            buildConfigField "String", "FCM_SEND_URL", project.property('FCM_SEND_URL')
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE-FIREBASE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "com.google.guava:guava:$rootProject.ext.guavaVersion"

    compile "com.android.support:recyclerview-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.ext.supportLibraryVersion"
    compile "com.android.support:support-v4:$rootProject.ext.supportLibraryVersion"

    compile "com.google.firebase:firebase-database:$rootProject.ext.firebaseVersion"
    compile "com.google.firebase:firebase-auth:$rootProject.ext.firebaseVersion"
    compile "com.google.firebase:firebase-messaging:$rootProject.ext.firebaseVersion"
    compile "com.squareup.okhttp3:okhttp:$rootProject.ext.okhttpVersion"
    compile "com.jakewharton:butterknife:$rootProject.ext.butterknifeVersion"
    compile "com.jakewharton:butterknife-compiler:$rootProject.ext.butterknifeVersion"
    compile "de.hdodenhof:circleimageview:$rootProject.ext.circleImageViewVersion"
    compile "com.github.bumptech.glide:glide:$rootProject.ext.glideVersion"
    compile "org.greenrobot:eventbus:$rootProject.ext.eventbusVersion"

    // Dagger dependencies
    apt "com.google.dagger:dagger-compiler:$rootProject.ext.daggerVersion"
    compile "javax.annotation:jsr250-api:$rootProject.ext.jsr250Version"
    compile "com.google.dagger:dagger:$rootProject.ext.daggerVersion"

    // Testing dependencies
    testCompile "org.robolectric:robolectric:$rootProject.ext.robolectricVersion"
    testCompile "org.mockito:mockito-all:$rootProject.ext.mockitoVersion"
    testCompile "junit:junit:$rootProject.ext.junitVersion"
}

apply plugin: 'com.google.gms.google-services'
